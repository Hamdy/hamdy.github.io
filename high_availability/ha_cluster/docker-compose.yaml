services:
  node1:
    tty: true
    image: ha_img
    privileged: true
    container_name: node1
    hostname: node1.demo.in
    environment:
      - EDITOR=vim
    build:
      context: ./docker
      dockerfile: Dockerfile
    volumes:
      - ./conf/corosync.conf:/etc/corosync/corosync.conf
      - ./script/hosts:/etc/hosts
      - ./script/start:/start
      
    entrypoint: /start
    networks:
      static-network:
        ipv4_address: 172.22.0.3
    # depends_on:
    #   node2:
    #     condition: service_healthy

  node2:
    tty: true
    image: ha_img
    privileged: true
    container_name: node2
    hostname: node2.demo.in
    environment:
      - EDITOR=vim
    build:
      context: ./docker
      dockerfile: Dockerfile
    volumes:
      - ./conf/corosync.conf:/etc/corosync/corosync.conf
      - ./script/start:/start
      - ./script/hosts:/etc/hosts
    entrypoint: /start
    networks:
      static-network:
        ipv4_address: 172.22.0.4
    # depends_on:
    #   node3:
    #     condition: service_healthy
    # healthcheck:
    #     test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/2224' || exit 1
    #     interval: 5s
    #     timeout: 10s
    #     retries: 2

  node3:
    tty: true
    privileged: true
    image: ha_img
    container_name: node3
    hostname: node3.demo.in
    environment:
      - EDITOR=vim
    build:
      context: ./docker
      dockerfile: Dockerfile
    volumes:
      - ./conf/corosync.conf:/etc/corosync/corosync.conf
      - ./script/hosts:/etc/hosts
      - ./script/start:/start
    entrypoint: /start
    networks:
      static-network:
        ipv4_address: 172.22.0.5

    # healthcheck:
    #     test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/2224' || exit 1
    #     interval: 5s
    #     timeout: 10s
    #     retries: 2

  
networks:
  static-network:
    ipam:
      config:
        - subnet: 172.22.0.0/16
